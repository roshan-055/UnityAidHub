// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int        @id @default(autoincrement())
  name           String
  email          String     @unique
  address        String
  contactNumber  String
  profilePicture String?
  password       String?
  roles          Role
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  Fundraiser     Post[]
  Donation       Donation[]
  Comment        Comment[]
}

enum Role {
  ADMIN
  FUNDRAISER
  DONATOR
}

model Post {
  id            Int        @id @default(autoincrement())
  title         String
  description   String
  startDate     DateTime?
  endDate       DateTime?
  goalAmount    Int
  currentAmount Int
  imageUrl      String?
  view          String
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  post          User       @relation(fields: [postId], references: [id])
  postId        Int
  donations     Donation[]
  Comment       Comment[]
  Category      Category?  @relation(fields: [categoryId], references: [id])
  categoryId    Int?
}

model Donation {
  id           Int      @id @default(autoincrement())
  amount       Float
  remarks      String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  donor        User     @relation(fields: [donorId], references: [id])
  donorId      Int
  fundraiser   Post     @relation(fields: [fundraiserId], references: [id])
  fundraiserId Int
}

model Category {
  id          Int           @id @default(autoincrement())
  name        String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  SubCategory SubCategory[]
  post        Post[]
}

model SubCategory {
  id         Int       @id @default(autoincrement())
  name       String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  categoryId Int?
  Category   Category? @relation(fields: [categoryId], references: [id])
}

//list of subcategory
//Education
//Health
//Shelter
//Food
//Pets and animals
//Events
//Financial
//Disaster
//Environment and Sanitation

// model EmailNotification {
//   id          Int       @id @default(autoincrement())
//   subject     String?
//   body        String?
//   sentAt      DateTime?
//   recipientId Int
//   recipient   User      @relation(fields: [recipientId], references: [id])
//   attachments String?
// }

model Ads {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// model Like {
//   id           Int  @id @default(autoincrement())
//   userId       Int
//   user         User @relation(fields: [userId], references: [id])
//   fundraiserNo Int
//   fundraiser   Post @relation(fields: [fundraiserNo], references: [id])
// }

model Comment {
  id           Int    @id @default(autoincrement())
  body         String
  userId       Int
  user         User   @relation(fields: [userId], references: [id])
  fundraiserNo Int
  fundraiser   Post   @relation(fields: [fundraiserNo], references: [id])
}
